{"ast":null,"code":"var _jsxFileName = \"/Users/shriharpande/Documents/mit/sem 4/dbms/TridentHotel/frontend/src/pages/GuestRestaurantOrders.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GuestRestaurantOrders = () => {\n  _s();\n  const [menu, setMenu] = useState([]); // Initialize as an empty array\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchMenu = async () => {\n      const branchId = localStorage.getItem('selectedBranchId'); // Retrieve branchId from localStorage\n\n      if (!branchId) {\n        setError('Branch ID is missing. Please select a branch.');\n        return;\n      }\n      try {\n        const response = await fetch(`http://localhost:5000/api/menu?branchId=${branchId}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        const data = await response.json();\n        if (response.ok && Array.isArray(data)) {\n          setMenu(data); // Set menu only if data is an array\n        } else {\n          setError('Failed to fetch menu.');\n        }\n      } catch (err) {\n        console.error('Error fetching menu:', err);\n        setError('Something went wrong. Please try again later.');\n      }\n    };\n    fetchMenu();\n  }, []);\n  const handleOrder = async menuItemId => {\n    try {\n      const response = await fetch('http://localhost:5000/api/order', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          menuItemId\n        })\n      });\n      if (response.ok) {\n        alert('Order placed successfully!');\n      } else {\n        alert('Failed to place order.');\n      }\n    } catch (err) {\n      console.error('Error placing order:', err);\n      alert('Something went wrong. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Restaurant Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: menu.length > 0 ? menu.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.item_name, \" - $\", item.item_price, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOrder(item.menu_item_id),\n          children: \"Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this)]\n      }, item.menu_item_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No menu items available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(GuestRestaurantOrders, \"Gzn+CMP+/A4+3bCdvb4AoCL/OYc=\");\n_c = GuestRestaurantOrders;\nexport default GuestRestaurantOrders;\nvar _c;\n$RefreshReg$(_c, \"GuestRestaurantOrders\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GuestRestaurantOrders","_s","menu","setMenu","error","setError","fetchMenu","branchId","localStorage","getItem","response","fetch","headers","Authorization","data","json","ok","Array","isArray","err","console","handleOrder","menuItemId","method","body","JSON","stringify","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","item","item_name","item_price","onClick","menu_item_id","_c","$RefreshReg$"],"sources":["/Users/shriharpande/Documents/mit/sem 4/dbms/TridentHotel/frontend/src/pages/GuestRestaurantOrders.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst GuestRestaurantOrders = () => {\n    const [menu, setMenu] = useState([]); // Initialize as an empty array\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        const fetchMenu = async () => {\n            const branchId = localStorage.getItem('selectedBranchId'); // Retrieve branchId from localStorage\n\n            if (!branchId) {\n                setError('Branch ID is missing. Please select a branch.');\n                return;\n            }\n\n            try {\n                const response = await fetch(`http://localhost:5000/api/menu?branchId=${branchId}`, {\n                    headers: {\n                        Authorization: `Bearer ${localStorage.getItem('token')}`,\n                    },\n                });\n                const data = await response.json();\n\n                if (response.ok && Array.isArray(data)) {\n                    setMenu(data); // Set menu only if data is an array\n                } else {\n                    setError('Failed to fetch menu.');\n                }\n            } catch (err) {\n                console.error('Error fetching menu:', err);\n                setError('Something went wrong. Please try again later.');\n            }\n        };\n\n        fetchMenu();\n    }, []);\n\n    const handleOrder = async (menuItemId) => {\n        try {\n            const response = await fetch('http://localhost:5000/api/order', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem('token')}`,\n                },\n                body: JSON.stringify({ menuItemId }),\n            });\n\n            if (response.ok) {\n                alert('Order placed successfully!');\n            } else {\n                alert('Failed to place order.');\n            }\n        } catch (err) {\n            console.error('Error placing order:', err);\n            alert('Something went wrong. Please try again later.');\n        }\n    };\n\n    return (\n        <div>\n            <h1>Restaurant Menu</h1>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            <ul>\n                {menu.length > 0 ? (\n                    menu.map((item) => (\n                        <li key={item.menu_item_id}>\n                            {item.item_name} - ${item.item_price}\n                            <button onClick={() => handleOrder(item.menu_item_id)}>Order</button>\n                        </li>\n                    ))\n                ) : (\n                    <p>No menu items available.</p>\n                )}\n            </ul>\n        </div>\n    );\n};\n\nexport default GuestRestaurantOrders;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}