{"ast":null,"code":"var _jsxFileName = \"/Users/shriharpande/Documents/mit/sem 4/dbms/TridentHotel/frontend/src/components/Auth/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      const response = await fetch('http://localhost:5000/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        localStorage.setItem('token', data.token);\n        if (data.role === 'GUEST') {\n          const bookingId = data.bookingId; // Assuming bookingId is returned in the response\n\n          if (bookingId) {\n            localStorage.setItem('bookingId', bookingId);\n            window.location.href = '/guest-dashboard';\n          } else {\n            window.location.href = '/guest/city-selection';\n          }\n        } else {\n          window.location.href = data.redirect;\n        }\n      } else {\n        setError(data.message || 'Invalid credentials');\n        console.error('Login failed:', data.message); // Log the backend message for debugging\n      }\n    } catch (err) {\n      setError('Something went wrong. Please try again later.');\n      console.error('Error during login:', err); // Log any errors in the request\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"lABZ+K3zbnEaFQvlduiFXLNOf5A=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","error","setError","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","token","role","bookingId","window","location","href","redirect","message","console","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","style","color","_c","$RefreshReg$"],"sources":["/Users/shriharpande/Documents/mit/sem 4/dbms/TridentHotel/frontend/src/components/Auth/Login.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Login = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        setError('');\n\n        try {\n            const response = await fetch('http://localhost:5000/api/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ username, password }),\n            });\n\n            const data = await response.json();\n\n            if (response.ok) {\n                localStorage.setItem('token', data.token);\n\n                if (data.role === 'GUEST') {\n                    const bookingId = data.bookingId; // Assuming bookingId is returned in the response\n\n                    if (bookingId) {\n                        localStorage.setItem('bookingId', bookingId);\n                        window.location.href = '/guest-dashboard';\n                    } else {\n                        window.location.href = '/guest/city-selection';\n                    }\n                } else {\n                    window.location.href = data.redirect;\n                }\n            } else {\n                setError(data.message || 'Invalid credentials');\n                console.error('Login failed:', data.message); // Log the backend message for debugging\n            }\n        } catch (err) {\n            setError('Something went wrong. Please try again later.');\n            console.error('Error during login:', err); // Log any errors in the request\n        }\n    };\n\n    return (\n        <div>\n            <h1>Login</h1>\n            <form onSubmit={handleLogin}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    required\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                />\n                <button type=\"submit\">Login</button>\n            </form>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}