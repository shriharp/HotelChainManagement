{"ast":null,"code":"var _jsxFileName = \"/Users/shriharpande/Documents/mit/sem 4/dbms/TridentHotel/frontend/src/pages/GuestRestaurantOrders.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GuestRestaurantOrders = () => {\n  _s();\n  const [menu, setMenu] = useState([]); // Initialize as an empty array\n  const [cart, setCart] = useState([]); // Cart to store selected items\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchMenu = async () => {\n      const branchName = localStorage.getItem('selectedCity'); // Use branchName instead of branchId\n\n      if (!branchName || branchName === 'undefined') {\n        // Handle undefined or missing branchName\n        setError('Branch name is missing or invalid. Please select a branch.');\n        return;\n      }\n      console.log('Retrieved branchName:', branchName); // Debugging log\n\n      try {\n        const response = await fetch(`http://localhost:5000/api/menu?branchName=${branchName}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        const data = await response.json();\n        if (response.ok && Array.isArray(data)) {\n          setMenu(data); // Set menu only if data is an array\n        } else {\n          setError('Failed to fetch menu.');\n        }\n      } catch (err) {\n        console.error('Error fetching menu:', err);\n        setError('Something went wrong. Please try again later.');\n      }\n    };\n    fetchMenu();\n  }, []);\n  const addToCart = menuItem => {\n    setCart(prevCart => [...prevCart, menuItem]);\n  };\n  const placeOrder = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/order', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          items: cart\n        })\n      });\n      if (response.ok) {\n        alert('Order placed successfully!');\n        setCart([]); // Clear the cart after successful order\n      } else {\n        alert('Failed to place order.');\n      }\n    } catch (err) {\n      console.error('Error placing order:', err);\n      alert('Something went wrong. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Restaurant Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: menu.length > 0 ? menu.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.item_name, \" - $\", item.item_price, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addToCart(item),\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this)]\n      }, item.menu_item_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No menu items available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: cart.length > 0 ? cart.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.item_name, \" - $\", item.item_price]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your cart is empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), cart.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: placeOrder,\n      children: \"Place Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(GuestRestaurantOrders, \"reUYi+3GU1iUMj9wdFKblpCigFs=\");\n_c = GuestRestaurantOrders;\nexport default GuestRestaurantOrders;\nvar _c;\n$RefreshReg$(_c, \"GuestRestaurantOrders\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GuestRestaurantOrders","_s","menu","setMenu","cart","setCart","error","setError","fetchMenu","branchName","localStorage","getItem","console","log","response","fetch","headers","Authorization","data","json","ok","Array","isArray","err","addToCart","menuItem","prevCart","placeOrder","method","body","JSON","stringify","items","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","item","item_name","item_price","onClick","menu_item_id","index","_c","$RefreshReg$"],"sources":["/Users/shriharpande/Documents/mit/sem 4/dbms/TridentHotel/frontend/src/pages/GuestRestaurantOrders.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst GuestRestaurantOrders = () => {\n    const [menu, setMenu] = useState([]); // Initialize as an empty array\n    const [cart, setCart] = useState([]); // Cart to store selected items\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        const fetchMenu = async () => {\n            const branchName = localStorage.getItem('selectedCity'); // Use branchName instead of branchId\n\n            if (!branchName || branchName === 'undefined') { // Handle undefined or missing branchName\n                setError('Branch name is missing or invalid. Please select a branch.');\n                return;\n            }\n\n            console.log('Retrieved branchName:', branchName); // Debugging log\n\n            try {\n                const response = await fetch(`http://localhost:5000/api/menu?branchName=${branchName}`, {\n                    headers: {\n                        Authorization: `Bearer ${localStorage.getItem('token')}`,\n                    },\n                });\n                const data = await response.json();\n\n                if (response.ok && Array.isArray(data)) {\n                    setMenu(data); // Set menu only if data is an array\n                } else {\n                    setError('Failed to fetch menu.');\n                }\n            } catch (err) {\n                console.error('Error fetching menu:', err);\n                setError('Something went wrong. Please try again later.');\n            }\n        };\n\n        fetchMenu();\n    }, []);\n\n    const addToCart = (menuItem) => {\n        setCart((prevCart) => [...prevCart, menuItem]);\n    };\n\n    const placeOrder = async () => {\n        try {\n            const response = await fetch('http://localhost:5000/api/order', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem('token')}`,\n                },\n                body: JSON.stringify({ items: cart }),\n            });\n\n            if (response.ok) {\n                alert('Order placed successfully!');\n                setCart([]); // Clear the cart after successful order\n            } else {\n                alert('Failed to place order.');\n            }\n        } catch (err) {\n            console.error('Error placing order:', err);\n            alert('Something went wrong. Please try again later.');\n        }\n    };\n\n    return (\n        <div>\n            <h1>Restaurant Menu</h1>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            <ul>\n                {menu.length > 0 ? (\n                    menu.map((item) => (\n                        <li key={item.menu_item_id}>\n                            {item.item_name} - ${item.item_price}\n                            <button onClick={() => addToCart(item)}>Add to Cart</button>\n                        </li>\n                    ))\n                ) : (\n                    <p>No menu items available.</p>\n                )}\n            </ul>\n\n            <h2>Cart</h2>\n            <ul>\n                {cart.length > 0 ? (\n                    cart.map((item, index) => (\n                        <li key={index}>\n                            {item.item_name} - ${item.item_price}\n                        </li>\n                    ))\n                ) : (\n                    <p>Your cart is empty.</p>\n                )}\n            </ul>\n\n            {cart.length > 0 && <button onClick={placeOrder}>Place Order</button>}\n        </div>\n    );\n};\n\nexport default GuestRestaurantOrders;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}