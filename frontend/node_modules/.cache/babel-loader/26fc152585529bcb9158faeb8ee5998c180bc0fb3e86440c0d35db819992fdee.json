{"ast":null,"code":"var _jsxFileName = \"/Users/shriharpande/Documents/mit/sem 4/dbms/TridentHotel/frontend/src/pages/GuestHotelFacilities.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GuestHotelFacilities = () => {\n  _s();\n  const [facilities, setFacilities] = useState([]);\n  const [error, setError] = useState('');\n  const bookingId = localStorage.getItem('bookingId'); // ðŸ‘ˆ make sure this exists in localStorage\n  if (!bookingId) {\n    alert('Booking ID not found. Please ensure you are checked in.');\n    return;\n  }\n  useEffect(() => {\n    const fetchFacilities = async () => {\n      const branchName = localStorage.getItem('selectedCity'); // Ensure branchName is retrieved correctly\n\n      if (!branchName) {\n        setError('Branch name is missing. Please select a branch.');\n        return;\n      }\n      try {\n        const response = await fetch(`http://localhost:5000/api/facilities?branchName=${branchName}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        const data = await response.json();\n        if (response.ok && Array.isArray(data)) {\n          setFacilities(data); // Ensure data is an array\n        } else {\n          setFacilities([]); // Fallback to an empty array\n          setError('Failed to fetch facilities.');\n        }\n      } catch (err) {\n        console.error('Error fetching facilities:', err);\n        setFacilities([]); // Fallback to an empty array\n        setError('Something went wrong. Please try again later.');\n      }\n    };\n    fetchFacilities();\n  }, []);\n  const handleUseFacility = async facilityId => {\n    try {\n      const response = await fetch('http://localhost:5000/api/use-facility', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          facilityId\n        })\n      });\n      if (response.ok) {\n        alert('Facility used successfully!');\n      } else {\n        alert('Failed to use facility.');\n      }\n    } catch (err) {\n      console.error('Error using facility:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hotel Facilities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: facilities.length > 0 ? facilities.map(facility => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [facility.facility_name, \" - $\", facility.usage_fee, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUseFacility(facility.facility_id),\n          children: \"Use\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this)]\n      }, facility.facility_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No facilities available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(GuestHotelFacilities, \"qNeeMwI4BjzPnWW50dbKPZy13aY=\");\n_c = GuestHotelFacilities;\nexport default GuestHotelFacilities;\nvar _c;\n$RefreshReg$(_c, \"GuestHotelFacilities\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GuestHotelFacilities","_s","facilities","setFacilities","error","setError","bookingId","localStorage","getItem","alert","fetchFacilities","branchName","response","fetch","headers","Authorization","data","json","ok","Array","isArray","err","console","handleUseFacility","facilityId","method","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","facility","facility_name","usage_fee","onClick","facility_id","_c","$RefreshReg$"],"sources":["/Users/shriharpande/Documents/mit/sem 4/dbms/TridentHotel/frontend/src/pages/GuestHotelFacilities.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst GuestHotelFacilities = () => {\n    const [facilities, setFacilities] = useState([]);\n    const [error, setError] = useState('');\n    const bookingId = localStorage.getItem('bookingId'); // ðŸ‘ˆ make sure this exists in localStorage\n    if (!bookingId) {\n        alert('Booking ID not found. Please ensure you are checked in.');\n        return;\n    }\n\n\n    useEffect(() => {\n        const fetchFacilities = async () => {\n            const branchName = localStorage.getItem('selectedCity'); // Ensure branchName is retrieved correctly\n\n            if (!branchName) {\n                setError('Branch name is missing. Please select a branch.');\n                return;\n            }\n\n            try {\n                const response = await fetch(`http://localhost:5000/api/facilities?branchName=${branchName}`, {\n                    headers: {\n                        Authorization: `Bearer ${localStorage.getItem('token')}`,\n                    },\n                });\n                const data = await response.json();\n\n                if (response.ok && Array.isArray(data)) {\n                    setFacilities(data); // Ensure data is an array\n                } else {\n                    setFacilities([]); // Fallback to an empty array\n                    setError('Failed to fetch facilities.');\n                }\n            } catch (err) {\n                console.error('Error fetching facilities:', err);\n                setFacilities([]); // Fallback to an empty array\n                setError('Something went wrong. Please try again later.');\n            }\n        };\n\n        fetchFacilities();\n    }, []);\n\n    const handleUseFacility = async (facilityId) => {\n        try {\n            const response = await fetch('http://localhost:5000/api/use-facility', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem('token')}`,\n                },\n                body: JSON.stringify({ facilityId }),\n            });\n\n            if (response.ok) {\n                alert('Facility used successfully!');\n            } else {\n                alert('Failed to use facility.');\n            }\n        } catch (err) {\n            console.error('Error using facility:', err);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Hotel Facilities</h1>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            <ul>\n                {facilities.length > 0 ? (\n                    facilities.map((facility) => (\n                        <li key={facility.facility_id}>\n                            {facility.facility_name} - ${facility.usage_fee}\n                            <button onClick={() => handleUseFacility(facility.facility_id)}>Use</button>\n                        </li>\n                    ))\n                ) : (\n                    <p>No facilities available.</p>\n                )}\n            </ul>\n        </div>\n    );\n};\n\nexport default GuestHotelFacilities;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMU,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;EACrD,IAAI,CAACF,SAAS,EAAE;IACZG,KAAK,CAAC,yDAAyD,CAAC;IAChE;EACJ;EAGAZ,SAAS,CAAC,MAAM;IACZ,MAAMa,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,UAAU,GAAGJ,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;;MAEzD,IAAI,CAACG,UAAU,EAAE;QACbN,QAAQ,CAAC,iDAAiD,CAAC;QAC3D;MACJ;MAEA,IAAI;QACA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAmDF,UAAU,EAAE,EAAE;UAC1FG,OAAO,EAAE;YACLC,aAAa,EAAE,UAAUR,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;UAC1D;QACJ,CAAC,CAAC;QACF,MAAMQ,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAElC,IAAIL,QAAQ,CAACM,EAAE,IAAIC,KAAK,CAACC,OAAO,CAACJ,IAAI,CAAC,EAAE;UACpCb,aAAa,CAACa,IAAI,CAAC,CAAC,CAAC;QACzB,CAAC,MAAM;UACHb,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;UACnBE,QAAQ,CAAC,6BAA6B,CAAC;QAC3C;MACJ,CAAC,CAAC,OAAOgB,GAAG,EAAE;QACVC,OAAO,CAAClB,KAAK,CAAC,4BAA4B,EAAEiB,GAAG,CAAC;QAChDlB,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;QACnBE,QAAQ,CAAC,+CAA+C,CAAC;MAC7D;IACJ,CAAC;IAEDK,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,iBAAiB,GAAG,MAAOC,UAAU,IAAK;IAC5C,IAAI;MACA,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;QACnEY,MAAM,EAAE,MAAM;QACdX,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAUR,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC1D,CAAC;QACDkB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEJ;QAAW,CAAC;MACvC,CAAC,CAAC;MAEF,IAAIZ,QAAQ,CAACM,EAAE,EAAE;QACbT,KAAK,CAAC,6BAA6B,CAAC;MACxC,CAAC,MAAM;QACHA,KAAK,CAAC,yBAAyB,CAAC;MACpC;IACJ,CAAC,CAAC,OAAOY,GAAG,EAAE;MACVC,OAAO,CAAClB,KAAK,CAAC,uBAAuB,EAAEiB,GAAG,CAAC;IAC/C;EACJ,CAAC;EAED,oBACItB,OAAA;IAAA8B,QAAA,gBACI9B,OAAA;MAAA8B,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxB7B,KAAK,iBAAIL,OAAA;MAAGmC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEzB;IAAK;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDlC,OAAA;MAAA8B,QAAA,EACK3B,UAAU,CAACkC,MAAM,GAAG,CAAC,GAClBlC,UAAU,CAACmC,GAAG,CAAEC,QAAQ,iBACpBvC,OAAA;QAAA8B,QAAA,GACKS,QAAQ,CAACC,aAAa,EAAC,MAAI,EAACD,QAAQ,CAACE,SAAS,eAC/CzC,OAAA;UAAQ0C,OAAO,EAAEA,CAAA,KAAMlB,iBAAiB,CAACe,QAAQ,CAACI,WAAW,CAAE;UAAAb,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFvEK,QAAQ,CAACI,WAAW;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGzB,CACP,CAAC,gBAEFlC,OAAA;QAAA8B,QAAA,EAAG;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACjC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAChC,EAAA,CAlFID,oBAAoB;AAAA2C,EAAA,GAApB3C,oBAAoB;AAoF1B,eAAeA,oBAAoB;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}