{"ast":null,"code":"var _jsxFileName = \"/Users/shriharpande/Documents/mit/sem 4/dbms/TridentHotel/frontend/src/pages/HotelFacilitiesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HotelFacilitiesPage = () => {\n  _s();\n  const [facilities, setFacilities] = useState([]);\n  useEffect(() => {\n    const fetchFacilities = async () => {\n      const response = await fetch('http://localhost:5000/api/facilities');\n      const data = await response.json();\n      setFacilities(data);\n    };\n    fetchFacilities();\n  }, []);\n  const handleUseFacility = async facilityId => {\n    try {\n      const response = await fetch('http://localhost:5000/api/use-facility', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          facilityId\n        })\n      });\n      if (response.ok) {\n        alert('Facility used successfully!');\n      } else {\n        alert('Failed to use facility.');\n      }\n    } catch (err) {\n      alert('Something went wrong. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hotel Facilities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: facilities.map(facility => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [facility.name, \" - $\", facility.usage_fee, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUseFacility(facility.id),\n          children: \"Use\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, facility.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(HotelFacilitiesPage, \"zbPM2qBH6eUTeJSWFjOBMKUiyyg=\");\n_c = HotelFacilitiesPage;\nexport default HotelFacilitiesPage;\nvar _c;\n$RefreshReg$(_c, \"HotelFacilitiesPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","HotelFacilitiesPage","_s","facilities","setFacilities","fetchFacilities","response","fetch","data","json","handleUseFacility","facilityId","method","headers","body","JSON","stringify","ok","alert","err","children","fileName","_jsxFileName","lineNumber","columnNumber","map","facility","name","usage_fee","onClick","id","_c","$RefreshReg$"],"sources":["/Users/shriharpande/Documents/mit/sem 4/dbms/TridentHotel/frontend/src/pages/HotelFacilitiesPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst HotelFacilitiesPage = () => {\n    const [facilities, setFacilities] = useState([]);\n\n    useEffect(() => {\n        const fetchFacilities = async () => {\n            const response = await fetch('http://localhost:5000/api/facilities');\n            const data = await response.json();\n            setFacilities(data);\n        };\n\n        fetchFacilities();\n    }, []);\n\n    const handleUseFacility = async (facilityId) => {\n        try {\n            const response = await fetch('http://localhost:5000/api/use-facility', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ facilityId }),\n            });\n\n            if (response.ok) {\n                alert('Facility used successfully!');\n            } else {\n                alert('Failed to use facility.');\n            }\n        } catch (err) {\n            alert('Something went wrong. Please try again later.');\n        }\n    };\n\n    return (\n        <div>\n            <h1>Hotel Facilities</h1>\n            <ul>\n                {facilities.map((facility) => (\n                    <li key={facility.id}>\n                        {facility.name} - ${facility.usage_fee}\n                        <button onClick={() => handleUseFacility(facility.id)}>Use</button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default HotelFacilitiesPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZ,MAAMO,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC;MACpE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,aAAa,CAACI,IAAI,CAAC;IACvB,CAAC;IAEDH,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,iBAAiB,GAAG,MAAOC,UAAU,IAAK;IAC5C,IAAI;MACA,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;QACnEK,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEL;QAAW,CAAC;MACvC,CAAC,CAAC;MAEF,IAAIL,QAAQ,CAACW,EAAE,EAAE;QACbC,KAAK,CAAC,6BAA6B,CAAC;MACxC,CAAC,MAAM;QACHA,KAAK,CAAC,yBAAyB,CAAC;MACpC;IACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVD,KAAK,CAAC,+CAA+C,CAAC;IAC1D;EACJ,CAAC;EAED,oBACIlB,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBxB,OAAA;MAAAoB,QAAA,EACKjB,UAAU,CAACsB,GAAG,CAAEC,QAAQ,iBACrB1B,OAAA;QAAAoB,QAAA,GACKM,QAAQ,CAACC,IAAI,EAAC,MAAI,EAACD,QAAQ,CAACE,SAAS,eACtC5B,OAAA;UAAQ6B,OAAO,EAAEA,CAAA,KAAMnB,iBAAiB,CAACgB,QAAQ,CAACI,EAAE,CAAE;UAAAV,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAF9DE,QAAQ,CAACI,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGhB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACtB,EAAA,CA9CID,mBAAmB;AAAA8B,EAAA,GAAnB9B,mBAAmB;AAgDzB,eAAeA,mBAAmB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}